from Crypto.Util.number import *
import gmpy2

# p = getPrime(1024)
# q = getPrime(1024)
# 客户端的公钥（e,n）
e = 65537
n = 16844293832204925531995531002417212077280587020670189322059734437382355176353733999349026476869554675408024250371111049018834006053296922953251782777040170569373564676842760720791044036182968196221507680401444269168017623955893836990724922479170203360148273572383165151224605641992064175777464992472974521994405009839205176435727234196007132251159039567840996589669118717231713423964584841793607678900712042296422388699695191710513999014214483679302772333976100978366870717763391295439596140427069437340726379126907713651549903803836950606764135954190465401753937554579208808872969488603921927764738570808094809229579

# 客户端的私钥 d
# d = gmpy2.invert(e, (p-1)*(q-1))
d = 5264018523542259789444137974892151312308828642909290133895439538154447355950086608185718163369781181729889141581865593404561381783993382043815703542373922111652043550153601512466566564002981088954524906576467950574944976978510790475716574412864258892216561500159903649270353359989616039551677075710499278040833174402866364504409989029155348820016004280373970904531746405343568831516839833359702449773422266122892544833896175974375260906391538832348945071376748226424926192258473569830310194539553866195357636375699879211174337032973244598869688544920334877854458996344282272829284036165783753582178212078157271066033

# 对方的公钥加密
def encrypt(m, e=65537, n=22525503623289816047380314346956334301305694241919159975385508662334776516414210153966939542737376991070948220516458006239912416908783729817366771495737174348677413599991058307232891978865600111351331402475809663242311557159418085143037364521637166181524764524945336184875890438194941331530565926263634548999264968864011853397628355760712120975228667131996134239656099641620786526468613015730548658608777300797632455943426116309194853679288549414818957021632060524845591910205375131376485399412572649317249053538681274073604598808181054909860214541909181412605142893319362088789822565080275573445334971126553761050239):
    m = bytes_to_long(m)
    return long_to_bytes(pow(m, e, n))
# 自己的私钥解密
def decrypt(c, d=5264018523542259789444137974892151312308828642909290133895439538154447355950086608185718163369781181729889141581865593404561381783993382043815703542373922111652043550153601512466566564002981088954524906576467950574944976978510790475716574412864258892216561500159903649270353359989616039551677075710499278040833174402866364504409989029155348820016004280373970904531746405343568831516839833359702449773422266122892544833896175974375260906391538832348945071376748226424926192258473569830310194539553866195357636375699879211174337032973244598869688544920334877854458996344282272829284036165783753582178212078157271066033,n=16844293832204925531995531002417212077280587020670189322059734437382355176353733999349026476869554675408024250371111049018834006053296922953251782777040170569373564676842760720791044036182968196221507680401444269168017623955893836990724922479170203360148273572383165151224605641992064175777464992472974521994405009839205176435727234196007132251159039567840996589669118717231713423964584841793607678900712042296422388699695191710513999014214483679302772333976100978366870717763391295439596140427069437340726379126907713651549903803836950606764135954190465401753937554579208808872969488603921927764738570808094809229579):
    try:
        c.decode()
        return c
    except UnicodeDecodeError as e:
        try:
            c = bytes_to_long(c)
            return long_to_bytes(pow(c, d, n))
        except UnicodeDecodeError as e:
            return b'who are you?'



