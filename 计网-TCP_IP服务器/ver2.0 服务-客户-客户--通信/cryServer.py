from Crypto.Util.number import *
import gmpy2

# p = getPrime(1024)
# q = getPrime(1024)
# 服务器的公钥（e,n）
e = 65537
n = 22525503623289816047380314346956334301305694241919159975385508662334776516414210153966939542737376991070948220516458006239912416908783729817366771495737174348677413599991058307232891978865600111351331402475809663242311557159418085143037364521637166181524764524945336184875890438194941331530565926263634548999264968864011853397628355760712120975228667131996134239656099641620786526468613015730548658608777300797632455943426116309194853679288549414818957021632060524845591910205375131376485399412572649317249053538681274073604598808181054909860214541909181412605142893319362088789822565080275573445334971126553761050239
# 服务器的私钥 d
# d = gmpy2.invert(e, (p-1)*(q-1))
d = 410042049873884226383946702105969251284887822613326179877548740927497266949694870282169749522951779152961551903140735789618315049089506533288349457473098387139663921522030800319343884077493033444346527353306390714376271231383581420810283898779515987221860080233452646116803291160208203129773489021964936096491474576925883689392862518202048177628600732556988840795595877974200552396112495645680882037445509378879985336750463372025853544759600453216858815375103367199396007228806870048175006017593045234681661915916339365242068188518452135181863500183356855075274642506011090713047683604003559550329062847594708339633

# 对方的公钥加密
def encrypt(m, e=65537, n=16844293832204925531995531002417212077280587020670189322059734437382355176353733999349026476869554675408024250371111049018834006053296922953251782777040170569373564676842760720791044036182968196221507680401444269168017623955893836990724922479170203360148273572383165151224605641992064175777464992472974521994405009839205176435727234196007132251159039567840996589669118717231713423964584841793607678900712042296422388699695191710513999014214483679302772333976100978366870717763391295439596140427069437340726379126907713651549903803836950606764135954190465401753937554579208808872969488603921927764738570808094809229579):
    m = bytes_to_long(m)
    return long_to_bytes(pow(m, e, n))
# 自己的私钥解密
def decrypt(c, d=410042049873884226383946702105969251284887822613326179877548740927497266949694870282169749522951779152961551903140735789618315049089506533288349457473098387139663921522030800319343884077493033444346527353306390714376271231383581420810283898779515987221860080233452646116803291160208203129773489021964936096491474576925883689392862518202048177628600732556988840795595877974200552396112495645680882037445509378879985336750463372025853544759600453216858815375103367199396007228806870048175006017593045234681661915916339365242068188518452135181863500183356855075274642506011090713047683604003559550329062847594708339633,n=22525503623289816047380314346956334301305694241919159975385508662334776516414210153966939542737376991070948220516458006239912416908783729817366771495737174348677413599991058307232891978865600111351331402475809663242311557159418085143037364521637166181524764524945336184875890438194941331530565926263634548999264968864011853397628355760712120975228667131996134239656099641620786526468613015730548658608777300797632455943426116309194853679288549414818957021632060524845591910205375131376485399412572649317249053538681274073604598808181054909860214541909181412605142893319362088789822565080275573445334971126553761050239):
    c = bytes_to_long(c)
    return long_to_bytes(pow(c, d, n))